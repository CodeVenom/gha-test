name: print-tf-plan
# TODO: switch to pr
on: [push]
permissions:
  contents: read
  id-token: write
  issues: write
concurrency:
  group: tf
  cancel-in-progress: false
env:
  JJ_DIR: /home/runner/work/gha-test/gha-test/.github/workflows/
jobs:
  # TODO: rename to test
  init:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: test workflow
        run: |
          cd ${{ env.JJ_DIR }}tests/
          ./test.sh runTestSuite
  prepare:
    needs: init
    runs-on: ubuntu-latest
    outputs:
      prefix-list: ${{ steps.moo.outputs.prefix-list }}
      workflows: ${{ steps.moo.outputs.workflows }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: moo
        id: moo
        run: ${{ env.JJ_DIR }}jj.sh prepare
  # TODO: move steps to prepare job
  test:
    needs: prepare
    runs-on: ubuntu-latest
    env:
      JJ_ISSUE_COUNT: "1"
    outputs:
      bla: ${{ steps.output.outputs.bla }}
      blub: ${{ steps.output.outputs.blub }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: curl 1
        run: ${{ env.JJ_DIR }}issues.sh updateIssueCount "${{ secrets.GITHUB_TOKEN }}"
      - name: bla issues
        id: bla
        uses: octokit/request-action@v2.x
        with:
          # TODO: define correct label name
          route: GET /repos/CodeVenom/gha-test/issues?labels=bla&state=open
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        TODO: use post request instead
#      - name: bug
#        uses: JasonEtco/create-an-issue@v2
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          assignees: CodeVenom
#          filename: .github/workflows/bug.md
      - name: set output
        id: output
        run: |
          echo "::set-output name=bla::$JJ_ISSUE_COUNT"
          echo "::set-output name=blub::$(echo '${{ needs.prepare.outputs.prefix-list }}' | jq '. | length')"
      - name: here we go
        run: |
          echo 'env issue count: ${{ env.JJ_ISSUE_COUNT }}'
          echo 'output issue count: ${{ steps.output.outputs.bla }}'
          echo 'prefix list length: ${{ steps.output.outputs.blub }}'
          echo '${{ needs.prepare.outputs.prefix-list }}'
          echo '${{ needs.prepare.outputs.workflows }}'
  build:
    if: ${{ !needs.prepare.outputs.workflows && needs.test.outputs.bla == '0' && needs.test.outputs.blub != '0' }}
    needs: [prepare, test]
    runs-on: ubuntu-latest
    env:
      JJ_PREFIX: ""
      JJ_REGION: "eu-central-1"
      JJ_ROLE: "none"
    strategy:
      fail-fast: false
      matrix:
        tf: ${{ fromJson(needs.prepare.outputs.prefix-list) }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: onehundred
        run: ${{ env.JJ_DIR }}me.sh extractMappedValues "${{ matrix.tf }}" "${{ env.JJ_DIR }}path-prefix-aws-role-mapping.json"
      - name: fail if role not found
        if: ${{ env.JJ_ROLE == 'none' }}
        # TODO: create issue before exiting => should not block workflow runs
        run: exit 1
      - name: install stuff
        run: |
          brew install tfenv
          tfenv install 1.1.8
          tfenv use 1.1.8
      - name: yo
        run: |
          echo "${{ env.JJ_MODE }}"
          echo "${{ env.JJ_REGION }}"
          echo "${{ env.JJ_ROLE }}"
          echo "${{ matrix.tf }}"
      - name: assume role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.JJ_ROLE }}
          aws-region: ${{ env.JJ_REGION }}
      - name: create tf plan
        run: |
          cd ${{ matrix.tf }}
          terraform init
          terraform plan -lock=false > plan.txt
          cat plan.txt
      - name: jj-prefix
        run: |
          export JJ_TEMP=$(echo ${{ matrix.tf }} | sed -E 's%/%-%g')
          echo "JJ_PREFIX=$JJ_TEMP" >> "$GITHUB_ENV"
      - name: store tf plan
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.JJ_PREFIX }}plan.txt
          path: ${{ matrix.tf }}plan.txt
          retention-days: 1
